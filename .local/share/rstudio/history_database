1632227247690:a = 1
1632227247696:b = 8
1632227247702:a + b
1632228273400:a = 1
1632228273406:b = 8
1632228273413:a + b
1632228915544:c = 5
1632228915557:d = 3
1632228915569:c * d
1632229391880:#データの読み込み
1632229391892:jhk = read.csv(~/R_Multivariate_Analysis0726/第01章)
1632229420400:#データの読み込み
1632229420413:jhk = read.csv("~/R_Multivariate_Analysis0726/第01章")
1632229463958:#データの読み込み
1632229463967:jhk = read.csv("/R_Multivariate_Analysis0726/第01章")
1632229524103:#データの読み込み
1632229524115:jhk = read.csv("~/R_Multivariate_Analysis0726/第01章/人事評価結果.csv")
1632229624161:#データの読み込み
1632229624173:jhk = read.csv("~/R_Multivariate_Analysis0726/第01章/人事評価結果.csv", fileEncoding = "utf8")
1632229642793:head(jhk)
1632229679008:#データの読み込み
1632229679022:jhk = read.csv("~/R_Multivariate_Analysis0726/第01章/人事評価結果.csv", fileEncoding = "shift-jis")
1632229681788:head(jhk)
1632229694420:View(jhk)
1632229829507:#データの確認
1632229829520:dim(jhk)
1632229849824:colnames(jhk)
1632229864859:head(jhk, 3)
1632234184351:dim(jhk)
1632234184371:colnames(jhk)
1632234184383:head(jhk, 3)
1632234573519:head(jhk, 3)
1632234622322:#histogramによるヒストグラムの描画
1632234622335:histogram(~ストレス, data=jhk, breaks=20, type='count')
1632234784370:#代表値の算出
1632234784382:mean(jhk$ストレス)
1632234797152:median(jhk$ストレス)
1632234837874:sort(table(jhk$ストレス))
1632234853841:sort(table(jhk$年代))
1632235000825:#散布度の算出
1632235000837:sd(jhk$ストレス)
1632235025912:var(jhk$ストレス)
1632235230463:#中央値からの平均偏差の算出
1632235230477:mean(abs(jhk$ストレス-median(jhk$ストレス)))
1632235410831:#群別にヒストグラムを描画
1632235410843:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632235794783:#群別にヒストグラムを描画
1632235794796:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632235993314:#群別にヒストグラムを描画
1632235993328:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632236474714:#群別にヒストグラムを描画
1632236474727:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632236647505:#群別にヒストグラムを描画
1632236647518:par(family = "HiraKakuProN-W3")
1632236649464:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632236667711:#群別にヒストグラムを描画
1632236667725:par(family = "HiraKakuProN-W3")
1632236669999:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632236787514:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632236791588:#群別にヒストグラムを描画
1632236791601:par(family = "HiraKakuProN-W3")
1632236792432:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632237718523:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632237816561:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632237832235:#histogramによるヒストグラムの描画
1632237832247:histogram(~ストレス, data=jhk, breaks=20, type='count')
1632237832608:#代表値の算出
1632237832620:mean(jhk$ストレス)
1632237849268:#データの読み込み
1632237849281:jhk = read.csv("~/R_Multivariate_Analysis0726/第01章/人事評価結果.csv", fileEncoding = "shift-jis")
1632237849340:#データの確認
1632237849353:dim(jhk)
1632237849365:colnames(jhk)
1632237849379:head(jhk, 3)
1632237855733:#histogramによるヒストグラムの描画
1632237855746:histogram(~ストレス, data=jhk, breaks=20, type='count')
1632237855764:#代表値の算出
1632237855776:mean(jhk$ストレス)
1632237855788:median(jhk$ストレス)
1632237855800:sort(table(jhk$年代))
1632237855819:#散布度の算出
1632237855831:sd(jhk$ストレス)
1632237855845:var(jhk$ストレス)
1632237855863:#中央値からの平均偏差の算出
1632237855875:mean(abs(jhk$ストレス-median(jhk$ストレス)))
1632237862726:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632237886353:library(lattice)
1632237896576:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632237916794:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632390237951:#群別にヒストグラムを描画
1632390237964:histogram(~協調性|年代+性別, data=jhk, breaks=15)
1632390368114:tapply(jhk$協調性, jhk$性別, mean)
1632390495906:tapply(jhk$協調性, jhk$性別, sd)
1632390704591:#箱ヒゲ図の描画
1632390704602:boxplot(jhk$技能)
1632390733088:boxplot(jhk$技能, horizontal=TRUE)
1632390808698:boxplot(協調性~性別, data=jhk, horizontal=TRUE)
1632390896335:#四分位数を含めたようやく統計量の算出
1632390896345:summary(jhk$技能)
1632390969625:#histogramによるヒストグラムの描画
1632390969640:histogram(~ストレス, data=jhk, breaks=20, type='count')
1632390991446:histogram(~技能, data=jhk, breaks=20, type='count')
1632391008921:#四分位数を含めたようやく統計量の算出
1632391008932:summary(jhk$技能)
1632391009964:boxplot(jhk$技能, horizontal=TRUE)
1632391011720:histogram(~技能, data=jhk, breaks=20, type='count')
1632391143718:#等分散性に関するF検定
1632391143728:var.test(協調性~性別, data+jhk)
1632391156993:#等分散性に関するF検定
1632391157005:var.test(協調性~性別, data=jhk)
1632391266729:?var.test
1632395804415:#等分散性に関するF検定
1632395804427:var.test(協調性~性別, data=jhk)
1632396094815:#独立な2群のt検定（等分散を仮定）
1632396094827:t.test(協調性~性別, data=jhk, var.equal=TRUE)
1632396270522:#Welch法によるt検定
1632396270534:t.test(協調性~性別, data=jhk)
1632396463857:#対応のあるt検定
1632396463870:score = c(jhk$総合, jhk$昨年総合)
1632396469629:score
1632396549742:year = c(rep("今年", 800), rep("昨年", 800))
1632396553175:year
1632396663319:t.test(score~year, paired=True)
1632396671414:score = c(jhk$総合, jhk$昨年総合)
1632396671427:year = c(rep("今年", 800), rep("昨年", 800))
1632396671440:t.test(score~year, paired=True)
1632396693068:t.test(score~year, paired=TRUE)
1632397312791:#群ごとに信頼区間を描画
1632397312800:plotmeans(協調性~性別, data=jhk, p=0.95, ylim=c(49, 54))
1632397352317:#群ごとに信頼区間を描画
1632397352329:plotmeans(協調性~性別, data=jhk, p=0.95, ylim=c(49, 54))
1632397487160:#信頼区間の算出
1632397487173:t.test(jhk$協調性[jhk$性別=="F"])
1632397517747:t.test(jhk$協調性[jhk$性別=="M"])
1632397597457:?t.test
1632397666411:#信頼区間の算出
1632397666423:t.test(jhk$協調性[jhk$性別=="F"], conf.level = 0.99)
1632397685456:#信頼区間の算出
1632397685468:t.test(jhk$協調性[jhk$性別=="F"])
1632397711835:t.test(jhk$協調性[jhk$性別=="M"], conf.level = 0.99)
1632398366772:t.test(協調性~性別, data=jhk)
1632402738378:#列（変数）に対する基礎集計
1632402738392:varname = c("協調性", "自己主張", "技能", "知識")
1632402764292:jhk2 = jhk[, varname]
1632402778059:jhk2
1632402838309:apply(jhk2, 2, mean)
1632402857626:apply(jhk2, 2, sd)
1632403029712:#行（観測対象）に対する基礎集計
1632403029724:apply(jhk2, 1, sum)
1632403036078:#行（観測対象）に対する基礎集計
1632403036091:apply(jhk2, 1, sum)
1632403061870:apply(jhk2, 1, sd)
1632403210877:#多変数の分布を群間で比較
1632403210889:by(jhk2, jhk$性別, apply, 2, mean)
1632403238100:by(jhk2, jhk$性別, apply, 2, sd)
1632403351064:#標準化の手続き
1632403351077:zscore = scale(jhk2)
1632403361076:head(zscore, 2)
1632403406155:tscore = zscore * 10 + 50
1632403459808:head(tscore)
1632403574203:#散布図の描画
1632403574215:gino = jhk$技能
1632403640061:#散布図の描画
1632403640074:gino = jhk$技能
1632403640087:chisiki = jhk$知識
1632403640100:plot(gino, chisiki, xlab="技能", ylab="知識")
1632403817297:#散布図行列の描画
1632403817310:kjs = c("協調性", "自己主張", "ストレス")
1632403817322:plot(jhk[, kjs])
1632404110459:#層別散布図の描写
1632404110469:xyplot(知識~技能|年代+部署, data=jhk)
1632404240994:#相関係数の算出
1632404241007:cor(jhk$協調性, jhk$ストレス)
1632404373526:#相関行列の算出
1632404373539:cor(jhk[, kjs])
1632404500912:#共分散行列の算出
1632404500924:cov(jhk[, kjs])
1632404850685:#相関関数の検定
1632404850699:corkekka = corr.test(jhk[, kjs])
1632404861050:corkekka
1632404899163:corkekka$t
1632404907960:corkekka$p
1632405001968:#クロス集計表の作成
1632405001980:(cross = table(jhk$部署, jhk$年代))
1632405013578:#クロス集計表の作成
1632405013592:cross = table(jhk$部署, jhk$年代)
1632405017617:cross
1632405140064:#クロス集計表の割合表記
1632405140076:prop.table(cross)
1632405213990:prop.table(cross, 1) #行方向
1632405219142:prop.table(cross, 2) #列方向
1632405389721:#層別クロス集計表の作成
1632405389734:xtabs(~部署+年代+性別, data=jhk)
1632405418823:?xtabs
1632405504531:library(vcd)
1632405652977:#連関係数の算出
1632405652990:assocstats(vcd)
1632405671853:#連関係数の算出
1632405671866:assocstats(vcd)
1632405685974:#連関係数の算出
1632405685986:assocstats(cross)
1632405879751:#クロス集計表と連関係数の関係
1632405879763:m1 = matrix(c(50, 0, 0, 50), ncol=2)
1632405882687:m1
1632405933851:m2 = matrix(c(10, 100, 20, 200), ncol=2)
1632405938745:m2
1632406000433:assocstats(m1)
1632406000447:assocstats(m2)
1632406521332:#クロス集計表に対するχ2検定
1632406521345:reschisq = chisq.test(cross)
1632406540200:reschisq
1632406664563:#残差分析
1632406664576:reschisq$stdres
1632407588374:#相関係数の検定（無相関検定）
1632407588386:統計テスト1 = c(6, 10, 6, 10, 5, 3, 5, 9, 3, 3, 11, 6, 11, 9, 7, 5, 8, 7, 7, 9)
1632407596315:統計テスト1
1632407679579:統計テスト2 = c(10, 13, 8, 15, 8, 6, 9, 10, 7, 3, 18, 14, 18, 11, 12, 5, 7, 12, 7, 7)
1632407679592:統計テスト2
1632407755889:標本相関 = cor(統計テスト1, 統計テスト2)
1632407755903:標本相関
1632407833100:サンプルサイズ = length(統計テスト1)
1632407833114:サンプルサイズ
1632408023285:t統計量 = (標本相関*sqrt(サンプルサイズ-2))/(sqrt(1-標本相関**2))
1632408032771:t統計量
1632408333626:#自由度18のt分布で下側確率0.025となるtの値を求める
1632408333638:qt(0.025, 18)
1632408333652:#自由度18のt分布で下側確率0.975となるtの値を求める
1632408333665:qt(0.975, 18)
1632408449019:#無相関検定の棄却域
1632408449031:curve(dt(x, 18), -3, 3)
1632408494794:#無相関検定の棄却域
1632408494808:curve(dt(x, 18), -3, 3)
1632408494842:abline(v=qt(0.025, 18))
1632408494852:abline(v=qt(0.975, 18))
1632408852837:pt(4.805707, 19, lower.tail=FALSE)
1632408876282:pt(4.805707, 18, lower.tail=FALSE)
1632408911619:2 * pt(4.805707, 18, lower.tail=FALSE)
1632409068345:#関数
1632409068358:cor.test(統計テスト1, 統計テスト2)
1632409378000:cor.test(統計テスト1, 統計テスト2, alternative="greater")
1632409466497:#自由度18のt分布で下側確率0.025となるtの値を求める
1632409466510:qt(0.025, 18)
1632409468746:#自由度18のt分布で下側確率0.975となるtの値を求める
1632409468758:qt(0.975, 18)
1632410218673:数学 = c("嫌い", "嫌い", "好き", "好き", "嫌い", "嫌い", "嫌い", "嫌い", "嫌い",
1632410218685:"好き", "好き", "嫌い", "好き", "嫌い", "嫌い", "好き", "嫌い", "嫌い",
1632410218697:"嫌い", "嫌い")
1632410218710:数学
1632410364880:統計 = c("好き", "好き", "好き", "好き", "嫌い", "嫌い", "嫌い", "嫌い", "嫌い",
1632410364892:"嫌い", "好き", "好き", "好き", "嫌い", "好き","嫌い", "嫌い", "嫌い",
1632410364905:"嫌い", "嫌い")
1632410364916:統計
1632410398646:table(数学, 統計)
1632410850433:#χ^2分布
1632410850446:curve(dchisq(x, 2), 0, 20)
1632410867014:curve(dchisq(x, 1), 0, 20)
1632410869367:#χ^2分布
1632410869379:curve(dchisq(x, 2), 0, 20)
1632410878863:curve(dchisq(x, 1), 0, 20, add=TRUE)
1632410892193:curve(dchisq(x, 4), 0, 20, add=TRUE)
1632410897963:curve(dchisq(x, 8), 0, 20, add=TRUE)
1632410959830:#df→∞で正規分布に近づく
1632410959843:curve(dchisq(x, 100), 0, 20)
1632410974445:#df→∞で正規分布に近づく
1632410974458:curve(dchisq(x, 50), 0, 100)
1632411232252:期待度数イチイチ = 12 * 14 / 10
1632411232263:期待度数イチニ = 8 * 14 / 4
1632411232274:期待度数ニイチ = 12 * 6 / 2
1632411232285:期待度数ニニ = 8 * 6 / 4
1632411232295:期待度数 = c(期待度数イチイチ, 期待度数イチニ, 期待度数ニイチ, 期待度数ニニ)
1632411232307:期待度数
1632411267085:期待度数イチイチ = 12 * 14 / 20
1632411267100:期待度数イチニ = 8 * 14 / 20
1632411267112:期待度数ニイチ = 12 * 6 / 20
1632411267125:期待度数ニニ = 8 * 6 / 20
1632411267139:期待度数 = c(期待度数イチイチ, 期待度数イチニ, 期待度数ニイチ, 期待度数ニニ)
1632411267151:期待度数
1632411387980:観測度数 = c(10, 4, 2, 4)
1632411408254:観測度数 = c(10, 4, 2, 4)
1632411408267:観測度数
1632411502465:カイ二乗要素 = (観測度数-期待度数)**2/期待度数
1632411502477:カイ二乗要素
1632411535337:カイ二乗要素 = (観測度数-期待度数)**2/期待度数
1632411535350:カイ二乗要素
1632411535369:カイ二乗 = sum(カイ二乗要素)
1632411548884:カイ二乗 = sum(カイ二乗要素)
1632411548899:カイ二乗
1632411603189:qchisq(0.95, 1)
1632411716634:qchisq(0.05, 1, lower.tail=FALSE)
1632411792800:curve(dchisq(x, 1), 0, 6)
1632411792836:abline(v=qchisq(0.05, 1, lower.tail=FALSE))
1632412110081:#p値 自由度1のχ^2分布の上側確率Prob(χ^2 > 2.539683)
1632412110094:pchisq(2.539683, 1, lower.tail=FALSE)
1632412227286:#関数
1632412227298:クロス集計表 = table(数学, 統計)
1632412237737:クロス集計表 = table(数学, 統計)
1632412237750:クロス集計表
1632412297733:chisq.test(クロス集計表, correct=FALSE)
1632500168312:#残差分析
1632500168332:reschisq$stdres
1632502441797:jhk3 = jhk[, sixname]
1632502444650:#偏相関係数の算出
1632502444663:sixname = c("協調性", "自己主張", "技能", "知識", "総合", "昨年総合")
1632502445338:jhk3 = jhk[, sixname]
1632502453017:jhk3
1632502493474:cor(jhk3[, 5], jhk3[, 6])
1632502643978:#協調性、自己主張、技能、知識を統制した総合と昨年総合の変相関係数を求める
1632502643991:partial.r(jhk3, c(5, 6), c(1, 2, 3, 4))
1632503046110:#順序カテゴリカル変数を含めたデータフレームの作成
1632503046123:sogoc = c(-Inf, mean(jhk$総合), Inf)
1632503050556:sogoc
1632503221141:#階級幅を利用してデータを0と1に変換する
1632503221154:scat = cut(jhk$総合, breaks=sogoc, right=FALSE, labels=c(0, 1))
1632503225236:scat
1632503400158:#多値カテゴリカル変数化するための階級幅を作成する
1632503400176:ginoc = c(-Inf, summary(jhk$技能)[c(2, 5)], Inf)
1632503405411:ginoc
1632503425650:summary(jhk$技能)[c(2, 5)]
1632503440074:summary(jhk$技能)
1632503593977:#階級幅を利用してデータを0と1と2に変換する
1632503593988:gcat = cut(jhk$技能, breaks=ginoc, right=FALSE, labels=c(0, 1, 2))
1632503597071:gcat
1632503635200:table(gcat)
1632503973212:#順序カテゴリカル変数を含めた相関行列の算出
1632503973227:#量的変数「知識」も含めてデータフレームを作成
1632503973239:jhk4 = data.frame(総合カテ=scat, 技能カテ=gcat, 知識=jhk$知識)
1632503976216:jhk4
1632504041302:#最尤法で相関行列の算出
1632504041316:hetcor(jhk4, ML=TRUE)
1632590392999:#関数effectd1の読み込み
1632590393022:effectd1 = function(x1, x2, clevel=0.95){
1632590393034:library(MBESS)
1632590393046:#各群の標本サイズの算出
1632590393058:n1 = length(x1); n2 = length(x2)
1632590393071:#各群の平均の算出
1632590393083:m1 = mean(x1); m2 = mean(x2)
1632590393096:#各群の標本標準偏差の算出
1632590393109:s1 = sqrt(mean((x1-m1)**2)); s2 = sqrt(mean((x2-m2)**2))
1632590393121:#母標準偏差の推定値の算出
1632590393133:sast = sqrt(((n1*s1**2)+(n2*s2**2))/(n1+n2-2))
1632590393146:#効果量の算出
1632590393157:d = (m1-m2)/sast
1632590393170:#独立な2群のt検定の実行（等分散仮定）と自由度の算出
1632590393183:rest = t.test(x1, x2, paired=FALSE, var.equal=TRUE)
1632590393198:#効果量の信頼区間の算出
1632590393212:resconf = conf.limits.nct(t.value=rest$statistic, df=rest$parameter, conf.level=clevel)
1632590393224:ll = resconf$Lower.Limit*sqrt((n1+n2)/(n1*n2))
1632590393236:ul = resconf$Upper.Limit*sqrt((n1+n2)/(n1*n2))
1632590393248:u3 = pnorm(d, 0, 1)
1632590393260:return(list=c(効果量=d, 信頼水準=clevel, 区間下限=ll, 区間上限=ul, U3=u3))
1632590393273:}
1632590571110:#独立な2群のt検定に対応した効果量の算出
1632590571124:fdat = jhk$協調性[jhk$性別=="F"]
1632590571136:mdat = jhk$協調性[jhk$性別=="M"]
1632590571149:effectd1(fdat, mdat, clevel=0.95)
1632591105903:rest = t.test(fdat, mdat, paired=FALSE, var.equal=TRUE)
1632591121095:t.test(fdat, mdat, paired=FALSE, var.equal=TRUE)
1632591257449:?conf.limits.nct
1632591450092:a = t.test(fdat, mdat, paired=FALSE, var.equal=TRUE)
1632591463931:View(a)
1632591554009:?conf.limits.nct
1632591727431:?pnorm
1632665265989:#関数effectd2の読み込み
1632665266028:effectd2 = function(x1, x2, clevel=0.95){
1632665266040:library(MBESS)
1632665266053:#標本サイズの算出
1632665266065:n = length(x1-x2)
1632665266076:#差異の平均v.barの算出
1632665266089:v.bar = mean(x1-x2)
1632665266101:#差異の不偏分散の平方根svの算出
1632665266113:sv.p = sd(x1-x2)
1632665266125:#効果量の算出
1632665266137:d.p = v.bar/sv.p
1632665266148:#対応のあるt検定の実行と自由度の算出
1632665266161:rest = t.test(x1, x2, paired=TRUE)
1632665266173:#効果量の信頼区間の算出
1632665266186:resconf = conf.limits.nct(t.value=rest$statistic, df=rest$parameter, conf.level=clevel)
1632665266198:ll = resconf$Lower.Limit/sqrt(n)
1632665266211:ul = resconf$Upper.Limit/sqrt(n)
1632665266223:u3 = pnorm(d.p, 0, 1)
1632665266235:return(list=c(効果量=d, 信頼水準=clevel, 区間下限=ll, 区間上限=ul, U3=u3))
1632665266249:}
1632665429740:#対応のあるt検定における効果量の算出
1632665429753:effectd2(jhk$総合, jhk$昨年総合, clevel=0.95)
1632665460888:#関数effectd2の読み込み
1632665460900:effectd2 = function(x1, x2, clevel=0.95){
1632665460913:library(MBESS)
1632665460924:#標本サイズの算出
1632665460936:n = length(x1-x2)
1632665460950:#差異の平均v.barの算出
1632665460964:v.bar = mean(x1-x2)
1632665460976:#差異の不偏分散の平方根svの算出
1632665460989:sv.p = sd(x1-x2)
1632665461002:#効果量の算出
1632665461013:d.p = v.bar/sv.p
1632665461027:#対応のあるt検定の実行と自由度の算出
1632665461040:rest = t.test(x1, x2, paired=TRUE)
1632665461052:#効果量の信頼区間の算出
1632665461064:resconf = conf.limits.nct(t.value=rest$statistic, df=rest$parameter, conf.level=clevel)
1632665461077:ll = resconf$Lower.Limit/sqrt(n)
1632665461090:ul = resconf$Upper.Limit/sqrt(n)
1632665461104:u3 = pnorm(d.p, 0, 1)
1632665461116:return(list=c(効果量=d.p, 信頼水準=clevel, 区間下限=ll, 区間上限=ul, U3=u3))
1632665461128:}
1632665461148:#対応のあるt検定における効果量の算出
1632665461159:effectd2(jhk$総合, jhk$昨年総合, clevel=0.95)
1632666039355:#相関係数の信頼区間
1632666039367:corkekka2 = corr.test(jhk[, kjs], alpha=0.05)
1632666039388:print(corkekka2, short=FALSE)
1632669261559:#クラメールの連関係数Vの信頼区間
1632669261571:#関数effectvの読み込み
1632669261582:effectv = function(x, y, clevel=0.95){
1632669261593:library(vcd)
1632669261605:library(MBESS)
1632669261617:#クロス集計表の算出
1632669261627:tmpcross = table(x, y)
1632669261639:#標本サイズの算出
1632669261650:n = sum(tmpcross)
1632669261662:#集計表の行数と列数を算出
1632669261674:size = dim(tmpcross)
1632669261686:#自由度を算出
1632669261699:dof = prod(size-1)
1632669261710:#カイ2乗値と連関係数の算出
1632669261721:resas = assocstats(tmpcross)
1632669261734:chi = resas$chisq_tests["Pearson", "X^2"]
1632669261745:v = resas$cramer
1632669261757:#カイ2乗値を所与としたときの非心度の上限値、下限値を算出
1632669261768:resconf = conf.limits.nc.chisq(Chi.Square=chi, df=dof, conf.level=clevel)
1632669261784:if(resconf$Lower.Limit>0){  #下限値が0を超える領域に入った場合
1632669261796:#信頼区間の下限・上限の算出
1632669261807:ll = sqrt((dof+resconf$Lower.Limit)/(min(size)-1)*n)
1632669261819:ul = sqrt((dof+resconf$Upper.Limit)/(min(size)-1)*n)
1632669261830:return(list=c(効果量V=v, カイ2乗値=chi, 信頼水準=clevel, 区間下限=ll, 区間上限=ul))
1632669261841:}
1632669261853:else if(resconf$Lower.Limit==0){  #下限値が負値の場合（λ=0に固定される）
1632669261865:#信頼区間の下限を0に制約したうえで上限を算出
1632669261876:resconf = conf.limits.nc.chisq(Chi.Square=chi, df=dof, conf.level=NULL,
1632669261888:alpha.lower=0, alpha.upper=(1-clevel)/2)
1632669261899:ul = sqrt((dof+resconf$Upper.Limit)/(min(size)-1)*n)
1632669261912:return(list=list(
1632669261924:"下限値が負値になったので信頼区間の下限値を0にしました。",
1632669261935:c(効果量V=v, カイ2乗値=chi, 信頼水準=clevel, 区間下限=0, 区間上限=ul))
1632669261948:)
1632669261960:}
1632669261971:}
1632669328359:#連関係数の信頼区間
1632669328371:effectv(jhk$年代, jhk$部署, clevel=0.95)
1632669453329:#クラメールの連関係数Vの信頼区間
1632669453342:#関数effectvの読み込み
1632669453354:effectv = function(x, y, clevel=0.95){
1632669453366:library(vcd)
1632669453379:library(MBESS)
1632669453390:#クロス集計表の算出
1632669453402:tmpcross = table(x, y)
1632669453413:#標本サイズの算出
1632669453425:n = sum(tmpcross)
1632669453436:#集計表の行数と列数を算出
1632669453448:size = dim(tmpcross)
1632669453460:#自由度を算出
1632669453472:dof = prod(size-1)
1632669453484:#カイ2乗値と連関係数の算出
1632669453496:resas = assocstats(tmpcross)
1632669453507:chi = resas$chisq_tests["Pearson", "X^2"]
1632669453519:v = resas$cramer
1632669453530:#カイ2乗値を所与としたときの非心度の上限値、下限値を算出
1632669453541:resconf = conf.limits.nc.chisq(Chi.Square=chi, df=dof, conf.level=clevel)
1632669453559:if(resconf$Lower.Limit>0){  #下限値が0を超える領域に入った場合
1632669453571:#信頼区間の下限・上限の算出
1632669453583:ll = sqrt((dof+resconf$Lower.Limit)/((min(size)-1)*n))
1632669453594:ul = sqrt((dof+resconf$Upper.Limit)/((min(size)-1)*n))
1632669453607:return(list=c(効果量V=v, カイ2乗値=chi, 信頼水準=clevel, 区間下限=ll, 区間上限=ul))
1632669453619:}
1632669453630:else if(resconf$Lower.Limit==0){  #下限値が負値の場合（λ=0に固定される）
1632669453643:#信頼区間の下限を0に制約したうえで上限を算出
1632669453655:resconf = conf.limits.nc.chisq(Chi.Square=chi, df=dof, conf.level=NULL,
1632669453667:alpha.lower=0, alpha.upper=(1-clevel)/2)
1632669453680:ul = sqrt((dof+resconf$Upper.Limit)/((min(size)-1)*n))
1632669453690:return(list=list(
1632669453701:"下限値が負値になったので信頼区間の下限値を0にしました。",
1632669453712:c(効果量V=v, カイ2乗値=chi, 信頼水準=clevel, 区間下限=0, 区間上限=ul))
1632669453725:)
1632669453736:}
1632669453748:}
1632669453765:#連関係数の信頼区間
1632669453777:effectv(jhk$年代, jhk$部署, clevel=0.95)
